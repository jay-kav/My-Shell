NAME:
---------------------------------------------------------------
    CA216 MyShell Project
---------------------------------------------------------------

USER MANUAL:
---------------------------------------------------------------
    Welcome to the user manual page.
    This page is here to assist the users of MyShell and is designed to help you understand 
    the commands and the shells concepts.
---------------------------------------------------------------

SYNOPSIS:
---------------------------------------------------------------
    ./myshell [command_string | file]
---------------------------------------------------------------

DESCRIPTION:
---------------------------------------------------------------
    MyShell is a C based terminal I created. The shell can read and execute commands that have been entered either in the commandline or read from
    a file. MyShell is based of the terminal of a linux system and has some built-in functions from it. Listed below are all the built in commands along with their functionality. For cammands that cannot be found below MyShell has the functionality to still execute these.
---------------------------------------------------------------

COMMANDS:
---------------------------------------------------------------
    CD -
        Changes the current working directory.
        If passed cd is passed without a follow up argument it will return the current working directory.
        If the User wants to move directory they parses cd followed by 'exampledir' to move up to the next directory or '../' to regress
        the directory previous.

    CLR - 
        clr will clear the screen of all previous commandline input. 

    DIR -
        dir lists all files and directories of the current directory unless parsed along with a directory name.
        EXAMPLE: 'dir exampledir' will return all files and directories within exmpledir .


    ENVIRON -
        environ is a pointer to an array of strings containing all the environment variables.


    ECHO -
        echo returns a line of text parse to it.
        EXAMPLE: 'echo hello' returns hello.

    HELP -
        Displays this User manual.


    PAUSE -
        Pause ceases all processes until enter has been entered to interupt sleep mode. 


    QUIT -
        quit will exit the shell and end all processes inside MyShell.
---------------------------------------------------------------

ENVIRONMENT CONCEPTS:
---------------------------------------------------------------
    The environment variables are set buy the system and store configuration information to be accessed by various programs in the shell
    The shell commands can view and modify these variables. Everytime there is a change to the environment the variables will be updated
    for example the use of cd would update the environment variables.
    Examples of environment values used.
        USER - consists of the username of the current user 
        PATH - consists of a list of directories to search for executable files 
        PROMPT - The formated string to display before each command
        SHELL - conists of the pwd with the shell name appened to the end
        HELP - a path I created so I could constantly access this manual from any directory
---------------------------------------------------------------

I/O REDIRECTION:
---------------------------------------------------------------
    Input / Output redirection.
    The user can instead of reading from a commandline they can redirect input from a file as well as 
    direct output from either the commandline or a file into another file. 
    EXAMPLE:
        'sort < filename' - redirects input from file sort
        'dir > filename' - redirects output into a file
        'dir >> filename' - redirects output to a file but rather than overwriting it appends to the end

---------------------------------------------------------------

PROCESS CONCEPTS:
---------------------------------------------------------------
    This shell supports background and foreground processing.
    Foreground:
        Foreground execution means that the shell waits for the command to finish before executing 
        the next one. When a command is entered and executed in the foreground, the shell will fork a 
        child process to run the command and wait for it to finish before prompting for the next command. 
    
    Background:
        Inorder to activate background process you must enter a command with '&' appended to the end.
        EXAMPLE: 'sleep 10 &'
        Background processing runs independently from the user and when a command is executed the 
        user does not have to wait for the child process to finish before prompting the next command.
---------------------------------------------------------------

REFERENCES:
---------------------------------------------------------------
Brennan S., 2015. Tutorial - Write a Shell in C. Available at: https://brennan.io/2015/01/16/write-a-shell-in-c/.
C Standard Library Tutorial - Available at: https://www.tutorialspoint.com/c_standard_library/index.htm
Advanced Programming in the UNIX Environment', W. Richard Stevens, Addison-Wesley, 1993 - Available at: https://ptgmedia.pearsoncmg.com/images/9780321637734/samplepages/0321637739.pdf
Cobbaut P., 2015. - Linux Fundamentals. Available at: https://linux-training.be/linuxfun.pdf
The Linux Command Line: A Complete Introduction. No Starch Press, Shotts, William E., Jr, 2012. -Available at: http://linuxcommand.org/tlcl.php
---------------------------------------------------------------

ACKNOWLEDGMENT:
------------------------------------------------------------------------------------------------------------------------------
Jamie Kavanagh
ID: 21403382
Acknowledgement of the DCU Academic Integrity Policy:
I understand that the University regards breaches of academic integrity and plagiarism as grave 
and serious. I have read and understood the DCU Academic Integrity and Plagiarism Policy. I accept
the penalties that may be imposed should I engage in practice or practices that breach this policy. 
I have identified and included the source of all facts, ideas, opinions and viewpoints of others
in the assignment references. Direct quotations, paraphrasing, discussion of ideas from books,
journal articles, internet sources, module text, or any other source whatsoever are acknowledged
and the sources cited are identified in the assignment references. I declare that this material,
which I now submit for assessment, is entirely my own work and has not been taken from the work of
others save and to the extent that such work has been cited and acknowledged within the text of my
work. I have used the DCU library referencing guidelines and/or the appropriate referencing system
recommended in the assignment guidelines and/or programme documentation.